<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
</root>